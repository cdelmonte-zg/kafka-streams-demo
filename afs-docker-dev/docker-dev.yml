version: '2'
services:
  eurekaserver:
    image: cdelmonte/mw-eurekasvr:testing
    ports:
      - "8761:8761"
  
  afs-dante-service:
    image: cdelmonte/afs-dante-service:test
    ports:
      - "2673:2673"
    environment:
      PROFILE: "default"
      SERVER_PORT: "2673"
      NEO4J_SVR: "bolt://neo4j:7687"
      EUREKASERVER_URI: "http://eurekaserver:8761/eureka/"
      EUREKASERVER_PORT: "8761"
    depends_on:
      - neo4j
      
  datagenerator:
    image: cdelmonte/afs-datagenerator:test
    ports:
      - "8475:8475"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8475"
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:9092"
      SCHEMA_REGISTRY_SVR: "http://schema-registry:8081"
      FIXED_RATE_MILLISECONDS: 60000
  
  afs-neo4j-service:
    image: cdelmonte/afs-neo4j-service:test
    ports:
      - "8477:8477"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8477"
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:9092"
      SCHEMA_REGISTRY_SVR: "http://schema-registry:8081"
      NEO4J_SVR: "bolt://neo4j:7687"
    depends_on:
      - neo4j
  
  kafkastreams:
    image: cdelmonte/afs-kafkastreams:test
    ports:
      - "8476:8476"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8476"
      KAFKA_BOOTSTRAP_SERVERS: "http://kafka:9092"
      SCHEMA_REGISTRY_SVR: "http://schema-registry:8081"
      FIXED_RATE_MILLISECONDS: 60000

  kafka:
    image: confluentinc/cp-kafka:4.0.0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  schema-registry:
    image: confluentinc/cp-schema-registry:4.0.0
    container_name: schema-registry
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - kafka
      - zookeeper

  kafka-rest:
    image: confluentinc/cp-kafka-rest:4.0.0
    container_name: kafka-rest
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081  
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
  
  neo4j:
    image: neo4j:3.3
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - n4jdata:/data
      - n4jdata:/logs
    ulimits:
      nproc: 65535
      nofile:
        soft: 40000
        hard: 40000
    environment:
      NEO4J_dbms_memory_pagecache_size: 4G
 
  database:
    image: postgres:latest
    container_name: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=p0stgr@s
      - POSTGRES_DB=mw_local
      
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  
volumes:
  esdata:
    driver: local
  n4jdata:
    driver: local
